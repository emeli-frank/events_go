@use '../config/colors';

// size
.text-xs {
	font-size: 0.75rem;
	line-height: 1rem;
}

.text-sm {
	font-size: 0.875rem;
	line-height: 1.25rem;
}

.text-base {
	font-size: 1rem;
	line-height: 1.5rem;
}

.text-lg {
	font-size: 1.125rem;
	line-height: 1.75rem;
}

.text-xl {
	font-size: 1.25rem;
	line-height: 1.75rem;
}

.text-2xl {
	font-size: 1.5rem;
	line-height: 2rem;
}

.text-3xl {
	font-size: 1.875rem;
	line-height: 2.25rem;
}

.text-4xl {
	font-size: 2.25rem;
	line-height: 2.5rem;
}

.text-5xl {
	font-size: 3rem;
	line-height: 1;
}

.text-6xl {
	font-size: 3.75rem;
	line-height: 1;
}

.text-7xl {
	font-size: 4.5rem;
	line-height: 1;
}

.text-8xl {
	font-size: 6rem;
	line-height: 1;
}

.text-9xl {
	font-size: 8rem;
	line-height: 1;
}

// weight
.font-thin { font-weight: 100; }

.font-extralight { font-weight: 200; }

.font-light { font-weight: 300; }

.font-normal { font-weight: 400; }

.font-medium { font-weight: 500; }

.font-semibold { font-weight: 600; }

.font-bold { font-weight: 700; }

.font-extrabold { font-weight: 800; }

.font-black { font-weight: 900; }

// color
@mixin generate-text-color($palette, $name) {
	@each $key, $value in $palette {
		@if (type-of($value) == color) {
			.text-#{$name}-#{$key} {
				color: $value;
			}
		}
	
		@if (type-of($value) == color and $key == 500) {
			.text-#{$name} {
				color: $value;
			}
		}
	}
}

@include generate-text-color(colors.$palette-primary, "primary");
@include generate-text-color(colors.$palette-accent, "accent");
@include generate-text-color(colors.$palette-gray, "gray");

.text-warn {
	color: map-get(colors.$palette-warn, 500);
}

.text-white {
	color: #ffffff;
}

// align
.text-center	{
	text-align: center;
}

